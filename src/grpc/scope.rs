// This file is generated by rust-protobuf 2.20.0. Do not edit
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![rustfmt::skip]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_imports)]
#![allow(unused_results)]
//! Generated file from `proto/clarifai/auth/scope/scope.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
// const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_2_20_0;

#[derive(PartialEq,Clone,Default)]
pub struct ScopeList {
    // message fields
    pub scopes: ::std::vec::Vec<S>,
    pub endpoints: ::protobuf::RepeatedField<::std::string::String>,
    // special fields
    pub unknown_fields: ::protobuf::UnknownFields,
    pub cached_size: ::protobuf::CachedSize,
}

impl<'a> ::std::default::Default for &'a ScopeList {
    fn default() -> &'a ScopeList {
        <ScopeList as ::protobuf::Message>::default_instance()
    }
}

impl ScopeList {
    pub fn new() -> ScopeList {
        ::std::default::Default::default()
    }

    // repeated .clarifai.auth.scope.S scopes = 1;


    pub fn get_scopes(&self) -> &[S] {
        &self.scopes
    }
    pub fn clear_scopes(&mut self) {
        self.scopes.clear();
    }

    // Param is passed by value, moved
    pub fn set_scopes(&mut self, v: ::std::vec::Vec<S>) {
        self.scopes = v;
    }

    // Mutable pointer to the field.
    pub fn mut_scopes(&mut self) -> &mut ::std::vec::Vec<S> {
        &mut self.scopes
    }

    // Take field
    pub fn take_scopes(&mut self) -> ::std::vec::Vec<S> {
        ::std::mem::replace(&mut self.scopes, ::std::vec::Vec::new())
    }

    // repeated string endpoints = 2;


    pub fn get_endpoints(&self) -> &[::std::string::String] {
        &self.endpoints
    }
    pub fn clear_endpoints(&mut self) {
        self.endpoints.clear();
    }

    // Param is passed by value, moved
    pub fn set_endpoints(&mut self, v: ::protobuf::RepeatedField<::std::string::String>) {
        self.endpoints = v;
    }

    // Mutable pointer to the field.
    pub fn mut_endpoints(&mut self) -> &mut ::protobuf::RepeatedField<::std::string::String> {
        &mut self.endpoints
    }

    // Take field
    pub fn take_endpoints(&mut self) -> ::protobuf::RepeatedField<::std::string::String> {
        ::std::mem::replace(&mut self.endpoints, ::protobuf::RepeatedField::new())
    }
}

impl ::protobuf::Message for ScopeList {
    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::ProtobufResult<()> {
        while !is.eof()? {
            let (field_number, wire_type) = is.read_tag_unpack()?;
            match field_number {
                1 => {
                    ::protobuf::rt::read_repeated_enum_with_unknown_fields_into(wire_type, is, &mut self.scopes, 1, &mut self.unknown_fields)?
                },
                2 => {
                    ::protobuf::rt::read_repeated_string_into(wire_type, is, &mut self.endpoints)?;
                },
                _ => {
                    ::protobuf::rt::read_unknown_or_skip_group(field_number, wire_type, is, self.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u32 {
        let mut my_size = 0;
        for value in &self.scopes {
            my_size += ::protobuf::rt::enum_size(1, *value);
        };
        for value in &self.endpoints {
            my_size += ::protobuf::rt::string_size(2, &value);
        };
        my_size += ::protobuf::rt::unknown_fields_size(self.get_unknown_fields());
        self.cached_size.set(my_size);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::ProtobufResult<()> {
        for v in &self.scopes {
            os.write_enum(1, ::protobuf::ProtobufEnum::value(v))?;
        };
        for v in &self.endpoints {
            os.write_string(2, &v)?;
        };
        os.write_unknown_fields(self.get_unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn get_cached_size(&self) -> u32 {
        self.cached_size.get()
    }

    fn get_unknown_fields(&self) -> &::protobuf::UnknownFields {
        &self.unknown_fields
    }

    fn mut_unknown_fields(&mut self) -> &mut ::protobuf::UnknownFields {
        &mut self.unknown_fields
    }

    fn as_any(&self) -> &dyn (::std::any::Any) {
        self as &dyn (::std::any::Any)
    }
    fn as_any_mut(&mut self) -> &mut dyn (::std::any::Any) {
        self as &mut dyn (::std::any::Any)
    }
    fn into_any(self: ::std::boxed::Box<Self>) -> ::std::boxed::Box<dyn (::std::any::Any)> {
        self
    }

    fn descriptor(&self) -> &'static ::protobuf::reflect::MessageDescriptor {
        Self::descriptor_static()
    }

    fn new() -> ScopeList {
        ScopeList::new()
    }

    fn descriptor_static() -> &'static ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            let mut fields = ::std::vec::Vec::new();
            fields.push(::protobuf::reflect::accessor::make_vec_accessor::<_, ::protobuf::types::ProtobufTypeEnum<S>>(
                "scopes",
                |m: &ScopeList| { &m.scopes },
                |m: &mut ScopeList| { &mut m.scopes },
            ));
            fields.push(::protobuf::reflect::accessor::make_repeated_field_accessor::<_, ::protobuf::types::ProtobufTypeString>(
                "endpoints",
                |m: &ScopeList| { &m.endpoints },
                |m: &mut ScopeList| { &mut m.endpoints },
            ));
            ::protobuf::reflect::MessageDescriptor::new_pb_name::<ScopeList>(
                "ScopeList",
                fields,
                file_descriptor_proto()
            )
        })
    }

    fn default_instance() -> &'static ScopeList {
        static instance: ::protobuf::rt::LazyV2<ScopeList> = ::protobuf::rt::LazyV2::INIT;
        instance.get(ScopeList::new)
    }
}

impl ::protobuf::Clear for ScopeList {
    fn clear(&mut self) {
        self.scopes.clear();
        self.endpoints.clear();
        self.unknown_fields.clear();
    }
}

impl ::std::fmt::Debug for ScopeList {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for ScopeList {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Message(self)
    }
}

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum S {
    undef = 0,
    All = 1,
    Predict = 2,
    Inputs_Add = 4,
    Inputs_Get = 5,
    Inputs_Patch = 7,
    Inputs_Delete = 8,
    Outputs_Patch = 9,
    Concepts_Add = 10,
    Concepts_Get = 11,
    Concepts_Patch = 12,
    Concepts_Delete = 13,
    Models_Add = 14,
    Models_Get = 15,
    Models_Patch = 16,
    Models_Delete = 17,
    Models_Train = 26,
    Models_Sync = 27,
    Workflows_Add = 18,
    Workflows_Get = 19,
    Workflows_Patch = 20,
    Workflows_Delete = 21,
    WorkflowMetrics_Get = 96,
    WorkflowMetrics_Add = 97,
    WorkflowMetrics_Delete = 98,
    TSNEVisualizations_Add = 24,
    TSNEVisualizations_Get = 25,
    Annotations_Add = 37,
    Annotations_Get = 38,
    Annotations_Patch = 39,
    Annotations_Delete = 40,
    Collectors_Add = 41,
    Collectors_Get = 42,
    Collectors_Delete = 43,
    Apps_Add = 44,
    Apps_Get = 45,
    Apps_Delete = 46,
    Keys_Add = 47,
    Keys_Get = 48,
    Keys_Delete = 49,
    Collaborators_Add = 51,
    Collaborators_Get = 50,
    Collaborators_Delete = 52,
    Metrics_Add = 54,
    Metrics_Get = 53,
    Metrics_Delete = 63,
    Tasks_Add = 55,
    Tasks_Get = 56,
    Tasks_Delete = 70,
    PasswordPolicies_Add = 57,
    PasswordPolicies_Get = 58,
    PasswordPolicies_Delete = 59,
    LabelOrders_Get = 67,
    LabelOrders_Add = 68,
    LabelOrders_Delete = 69,
    UserFeatureConfigs_Get = 71,
    FindDuplicateAnnotationsJobs_Add = 102,
    FindDuplicateAnnotationsJobs_Get = 103,
    FindDuplicateAnnotationsJobs_Delete = 104,
    Search = 3,
    SavedSearch_Get = 114,
    SavedSearch_Add = 115,
    SavedSearch_Delete = 116,
}

impl ::protobuf::ProtobufEnum for S {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<S> {
        match value {
            0 => ::std::option::Option::Some(S::undef),
            1 => ::std::option::Option::Some(S::All),
            2 => ::std::option::Option::Some(S::Predict),
            4 => ::std::option::Option::Some(S::Inputs_Add),
            5 => ::std::option::Option::Some(S::Inputs_Get),
            7 => ::std::option::Option::Some(S::Inputs_Patch),
            8 => ::std::option::Option::Some(S::Inputs_Delete),
            9 => ::std::option::Option::Some(S::Outputs_Patch),
            10 => ::std::option::Option::Some(S::Concepts_Add),
            11 => ::std::option::Option::Some(S::Concepts_Get),
            12 => ::std::option::Option::Some(S::Concepts_Patch),
            13 => ::std::option::Option::Some(S::Concepts_Delete),
            14 => ::std::option::Option::Some(S::Models_Add),
            15 => ::std::option::Option::Some(S::Models_Get),
            16 => ::std::option::Option::Some(S::Models_Patch),
            17 => ::std::option::Option::Some(S::Models_Delete),
            26 => ::std::option::Option::Some(S::Models_Train),
            27 => ::std::option::Option::Some(S::Models_Sync),
            18 => ::std::option::Option::Some(S::Workflows_Add),
            19 => ::std::option::Option::Some(S::Workflows_Get),
            20 => ::std::option::Option::Some(S::Workflows_Patch),
            21 => ::std::option::Option::Some(S::Workflows_Delete),
            96 => ::std::option::Option::Some(S::WorkflowMetrics_Get),
            97 => ::std::option::Option::Some(S::WorkflowMetrics_Add),
            98 => ::std::option::Option::Some(S::WorkflowMetrics_Delete),
            24 => ::std::option::Option::Some(S::TSNEVisualizations_Add),
            25 => ::std::option::Option::Some(S::TSNEVisualizations_Get),
            37 => ::std::option::Option::Some(S::Annotations_Add),
            38 => ::std::option::Option::Some(S::Annotations_Get),
            39 => ::std::option::Option::Some(S::Annotations_Patch),
            40 => ::std::option::Option::Some(S::Annotations_Delete),
            41 => ::std::option::Option::Some(S::Collectors_Add),
            42 => ::std::option::Option::Some(S::Collectors_Get),
            43 => ::std::option::Option::Some(S::Collectors_Delete),
            44 => ::std::option::Option::Some(S::Apps_Add),
            45 => ::std::option::Option::Some(S::Apps_Get),
            46 => ::std::option::Option::Some(S::Apps_Delete),
            47 => ::std::option::Option::Some(S::Keys_Add),
            48 => ::std::option::Option::Some(S::Keys_Get),
            49 => ::std::option::Option::Some(S::Keys_Delete),
            51 => ::std::option::Option::Some(S::Collaborators_Add),
            50 => ::std::option::Option::Some(S::Collaborators_Get),
            52 => ::std::option::Option::Some(S::Collaborators_Delete),
            54 => ::std::option::Option::Some(S::Metrics_Add),
            53 => ::std::option::Option::Some(S::Metrics_Get),
            63 => ::std::option::Option::Some(S::Metrics_Delete),
            55 => ::std::option::Option::Some(S::Tasks_Add),
            56 => ::std::option::Option::Some(S::Tasks_Get),
            70 => ::std::option::Option::Some(S::Tasks_Delete),
            57 => ::std::option::Option::Some(S::PasswordPolicies_Add),
            58 => ::std::option::Option::Some(S::PasswordPolicies_Get),
            59 => ::std::option::Option::Some(S::PasswordPolicies_Delete),
            67 => ::std::option::Option::Some(S::LabelOrders_Get),
            68 => ::std::option::Option::Some(S::LabelOrders_Add),
            69 => ::std::option::Option::Some(S::LabelOrders_Delete),
            71 => ::std::option::Option::Some(S::UserFeatureConfigs_Get),
            102 => ::std::option::Option::Some(S::FindDuplicateAnnotationsJobs_Add),
            103 => ::std::option::Option::Some(S::FindDuplicateAnnotationsJobs_Get),
            104 => ::std::option::Option::Some(S::FindDuplicateAnnotationsJobs_Delete),
            3 => ::std::option::Option::Some(S::Search),
            114 => ::std::option::Option::Some(S::SavedSearch_Get),
            115 => ::std::option::Option::Some(S::SavedSearch_Add),
            116 => ::std::option::Option::Some(S::SavedSearch_Delete),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [S] = &[
            S::undef,
            S::All,
            S::Predict,
            S::Inputs_Add,
            S::Inputs_Get,
            S::Inputs_Patch,
            S::Inputs_Delete,
            S::Outputs_Patch,
            S::Concepts_Add,
            S::Concepts_Get,
            S::Concepts_Patch,
            S::Concepts_Delete,
            S::Models_Add,
            S::Models_Get,
            S::Models_Patch,
            S::Models_Delete,
            S::Models_Train,
            S::Models_Sync,
            S::Workflows_Add,
            S::Workflows_Get,
            S::Workflows_Patch,
            S::Workflows_Delete,
            S::WorkflowMetrics_Get,
            S::WorkflowMetrics_Add,
            S::WorkflowMetrics_Delete,
            S::TSNEVisualizations_Add,
            S::TSNEVisualizations_Get,
            S::Annotations_Add,
            S::Annotations_Get,
            S::Annotations_Patch,
            S::Annotations_Delete,
            S::Collectors_Add,
            S::Collectors_Get,
            S::Collectors_Delete,
            S::Apps_Add,
            S::Apps_Get,
            S::Apps_Delete,
            S::Keys_Add,
            S::Keys_Get,
            S::Keys_Delete,
            S::Collaborators_Add,
            S::Collaborators_Get,
            S::Collaborators_Delete,
            S::Metrics_Add,
            S::Metrics_Get,
            S::Metrics_Delete,
            S::Tasks_Add,
            S::Tasks_Get,
            S::Tasks_Delete,
            S::PasswordPolicies_Add,
            S::PasswordPolicies_Get,
            S::PasswordPolicies_Delete,
            S::LabelOrders_Get,
            S::LabelOrders_Add,
            S::LabelOrders_Delete,
            S::UserFeatureConfigs_Get,
            S::FindDuplicateAnnotationsJobs_Add,
            S::FindDuplicateAnnotationsJobs_Get,
            S::FindDuplicateAnnotationsJobs_Delete,
            S::Search,
            S::SavedSearch_Get,
            S::SavedSearch_Add,
            S::SavedSearch_Delete,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<S>("S", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for S {
}

impl ::std::default::Default for S {
    fn default() -> Self {
        S::undef
    }
}

impl ::protobuf::reflect::ProtobufValue for S {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

/// Extension fields
pub mod exts {

    pub const clarfai_exposed: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::EnumValueOptions, ::protobuf::types::ProtobufTypeBool> = ::protobuf::ext::ExtFieldOptional { field_number: 80318, phantom: ::std::marker::PhantomData };

    pub const clarifai_depending_scopes: ::protobuf::ext::ExtFieldRepeated<::protobuf::descriptor::EnumValueOptions, ::protobuf::types::ProtobufTypeEnum<super::S>> = ::protobuf::ext::ExtFieldRepeated { field_number: 80319, phantom: ::std::marker::PhantomData };
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n%proto/clarifai/auth/scope/scope.proto\x12\x13clarifai.auth.scope\x1a\
    \x20google/protobuf/descriptor.proto\"Y\n\tScopeList\x12.\n\x06scopes\
    \x18\x01\x20\x03(\x0e2\x16.clarifai.auth.scope.SR\x06scopes\x12\x1c\n\te\
    ndpoints\x18\x02\x20\x03(\tR\tendpoints*\xa8\x0f\n\x01S\x12\t\n\x05undef\
    \x10\0\x12\r\n\x03All\x10\x01\x1a\x04\xf0\x9b'\x01\x12\x11\n\x07Predict\
    \x10\x02\x1a\x04\xf0\x9b'\x01\x12\x18\n\nInputs_Add\x10\x04\x1a\x08\xf0\
    \x9b'\x01\xf8\x9b'\x05\x12\x14\n\nInputs_Get\x10\x05\x1a\x04\xf0\x9b'\
    \x01\x12\x20\n\x0cInputs_Patch\x10\x07\x1a\x0e\x08\x01\xf0\x9b'\x01\xf8\
    \x9b'\x04\xf8\x9b'\x05\x12\x1f\n\rInputs_Delete\x10\x08\x1a\x0c\xf0\x9b'\
    \x01\xf8\x9b'\x04\xf8\x9b'\x05\x12\x1d\n\rOutputs_Patch\x10\t\x1a\n\x08\
    \x01\xf8\x9b'\x05\xf8\x9b'\x02\x12\x1a\n\x0cConcepts_Add\x10\n\x1a\x08\
    \xf0\x9b'\x01\xf8\x9b'\x0b\x12\x16\n\x0cConcepts_Get\x10\x0b\x1a\x04\xf0\
    \x9b'\x01\x12\"\n\x0eConcepts_Patch\x10\x0c\x1a\x0e\x08\x01\xf0\x9b'\x01\
    \xf8\x9b'\n\xf8\x9b'\x0b\x12\x1d\n\x0fConcepts_Delete\x10\r\x1a\x08\xf8\
    \x9b'\n\xf8\x9b'\x0b\x12\x18\n\nModels_Add\x10\x0e\x1a\x08\xf8\x9b'\x0f\
    \xf0\x9b'\x01\x12\x14\n\nModels_Get\x10\x0f\x1a\x04\xf0\x9b'\x01\x12$\n\
    \x0cModels_Patch\x10\x10\x1a\x12\x08\x01\xf8\x9b'\x0e\xf8\x9b'\x0f\xf8\
    \x9b'\x1a\xf0\x9b'\x01\x12\x1f\n\rModels_Delete\x10\x11\x1a\x0c\xf8\x9b'\
    \x0e\xf8\x9b'\x0f\xf0\x9b'\x01\x12\x1a\n\x0cModels_Train\x10\x1a\x1a\x08\
    \xf0\x9b'\x01\xf8\x9b'\x0f\x12\x15\n\x0bModels_Sync\x10\x1b\x1a\x04\xf8\
    \x9b'\x0f\x12\x1b\n\rWorkflows_Add\x10\x12\x1a\x08\xf0\x9b'\x01\xf8\x9b'\
    \x13\x12\x17\n\rWorkflows_Get\x10\x13\x1a\x04\xf0\x9b'\x01\x12#\n\x0fWor\
    kflows_Patch\x10\x14\x1a\x0e\x08\x01\xf8\x9b'\x12\xf8\x9b'\x13\xf0\x9b'\
    \x01\x12\"\n\x10Workflows_Delete\x10\x15\x1a\x0c\xf8\x9b'\x12\xf8\x9b'\
    \x13\xf0\x9b'\x01\x12\x1d\n\x13WorkflowMetrics_Get\x10`\x1a\x04\xf0\x9b'\
    \x01\x12!\n\x13WorkflowMetrics_Add\x10a\x1a\x08\xf0\x9b'\x01\xf8\x9b'`\
    \x12(\n\x16WorkflowMetrics_Delete\x10b\x1a\x0c\xf0\x9b'\x01\xf8\x9b'a\
    \xf8\x9b'`\x12\"\n\x16TSNEVisualizations_Add\x10\x18\x1a\x06\x08\x01\xf8\
    \x9b'\x19\x12\x1e\n\x16TSNEVisualizations_Get\x10\x19\x1a\x02\x08\x01\
    \x12\x1d\n\x0fAnnotations_Add\x10%\x1a\x08\xf8\x9b'&\xf0\x9b'\x01\x12\
    \x19\n\x0fAnnotations_Get\x10&\x1a\x04\xf0\x9b'\x01\x12%\n\x11Annotation\
    s_Patch\x10'\x1a\x0e\x08\x01\xf0\x9b'\x01\xf8\x9b'%\xf8\x9b'&\x12$\n\x12\
    Annotations_Delete\x10(\x1a\x0c\xf0\x9b'\x01\xf8\x9b'%\xf8\x9b'&\x12\x1c\
    \n\x0eCollectors_Add\x10)\x1a\x08\xf0\x9b'\x01\xf8\x9b'*\x12\x18\n\x0eCo\
    llectors_Get\x10*\x1a\x04\xf0\x9b'\x01\x12#\n\x11Collectors_Delete\x10+\
    \x1a\x0c\xf8\x9b')\xf8\x9b'*\xf0\x9b'\x01\x12\x16\n\x08Apps_Add\x10,\x1a\
    \x08\xf8\x9b'-\xf0\x9b'\x01\x12\x12\n\x08Apps_Get\x10-\x1a\x04\xf0\x9b'\
    \x01\x12\x1d\n\x0bApps_Delete\x10.\x1a\x0c\xf8\x9b',\xf8\x9b'-\xf0\x9b'\
    \x01\x12\x16\n\x08Keys_Add\x10/\x1a\x08\xf0\x9b'\x01\xf8\x9b'0\x12\x12\n\
    \x08Keys_Get\x100\x1a\x04\xf0\x9b'\x01\x12\x1d\n\x0bKeys_Delete\x101\x1a\
    \x0c\xf8\x9b'/\xf8\x9b'0\xf0\x9b'\x01\x12\x1f\n\x11Collaborators_Add\x10\
    3\x1a\x08\xf8\x9b'2\xf0\x9b'\x01\x12\x1b\n\x11Collaborators_Get\x102\x1a\
    \x04\xf0\x9b'\x01\x12&\n\x14Collaborators_Delete\x104\x1a\x0c\xf0\x9b'\
    \x01\xf8\x9b'3\xf8\x9b'2\x12\x19\n\x0bMetrics_Add\x106\x1a\x08\xf0\x9b'\
    \x01\xf8\x9b'5\x12\x15\n\x0bMetrics_Get\x105\x1a\x04\xf0\x9b'\x01\x12\
    \x20\n\x0eMetrics_Delete\x10?\x1a\x0c\xf0\x9b'\x01\xf8\x9b'6\xf8\x9b'5\
    \x12\x17\n\tTasks_Add\x107\x1a\x08\xf0\x9b'\x01\xf8\x9b'8\x12\x13\n\tTas\
    ks_Get\x108\x1a\x04\xf0\x9b'\x01\x12\x1e\n\x0cTasks_Delete\x10F\x1a\x0c\
    \xf8\x9b'7\xf8\x9b'8\xf0\x9b'\x01\x12\"\n\x14PasswordPolicies_Add\x109\
    \x1a\x08\xf8\x9b':\xf0\x9b'\x01\x12\x1e\n\x14PasswordPolicies_Get\x10:\
    \x1a\x04\xf0\x9b'\x01\x12)\n\x17PasswordPolicies_Delete\x10;\x1a\x0c\xf8\
    \x9b'9\xf8\x9b':\xf0\x9b'\x01\x12\x19\n\x0fLabelOrders_Get\x10C\x1a\x04\
    \xf0\x9b'\x01\x12\x1d\n\x0fLabelOrders_Add\x10D\x1a\x08\xf8\x9b'C\xf0\
    \x9b'\x01\x12$\n\x12LabelOrders_Delete\x10E\x1a\x0c\xf0\x9b'\x01\xf8\x9b\
    'D\xf8\x9b'C\x12\x20\n\x16UserFeatureConfigs_Get\x10G\x1a\x04\xf0\x9b'\
    \x01\x12.\n\x20FindDuplicateAnnotationsJobs_Add\x10f\x1a\x08\xf8\x9b'g\
    \xf0\x9b'\x01\x12*\n\x20FindDuplicateAnnotationsJobs_Get\x10g\x1a\x04\
    \xf0\x9b'\x01\x125\n#FindDuplicateAnnotationsJobs_Delete\x10h\x1a\x0c\
    \xf0\x9b'\x01\xf8\x9b'f\xf8\x9b'g\x12\x10\n\x06Search\x10\x03\x1a\x04\
    \xf0\x9b'\x01\x12\x19\n\x0fSavedSearch_Get\x10r\x1a\x04\xf0\x9b'\x01\x12\
    \x1d\n\x0fSavedSearch_Add\x10s\x1a\x08\xf8\x9b'r\xf0\x9b'\x01\x12$\n\x12\
    SavedSearch_Delete\x10t\x1a\x0c\xf0\x9b'\x01\xf8\x9b'r\xf8\x9b's\"\x04\
    \x08\x1e\x10\x1e\"\x04\x08\x1f\x10\x1f\"\x04\x08\x20\x10\x20\"\x04\x08!\
    \x10!\"\x04\x08\"\x10\":L\n\x0fclarfai_exposed\x18\xbe\xf3\x04\x20\x01(\
    \x08\x12!.google.protobuf.EnumValueOptionsR\x0eclarfaiExposed:w\n\x19cla\
    rifai_depending_scopes\x18\xbf\xf3\x04\x20\x03(\x0e2\x16.clarifai.auth.s\
    cope.S\x12!.google.protobuf.EnumValueOptionsR\x17clarifaiDependingScopes\
    Bg\n\x1ccom.clarifai.grpc.auth.scopeP\x01Z>github.com/Clarifai/clarifai-\
    go-grpc/proto/clarifai/auth/scope\xa2\x02\x04CAIPJ\xabQ\n\x07\x12\x05\0\
    \0\xdb\x02\x01\n\x08\n\x01\x0c\x12\x03\0\0\x12\n\t\n\x02\x03\0\x12\x03\
    \x02\0*\n\x08\n\x01\x02\x12\x03\x04\0\x1c\n\x08\n\x01\x08\x12\x03\x06\0U\
    \n\t\n\x02\x08\x0b\x12\x03\x06\0U\n\x08\n\x01\x08\x12\x03\x07\0\"\n\t\n\
    \x02\x08\n\x12\x03\x07\0\"\n\x08\n\x01\x08\x12\x03\x08\05\n\t\n\x02\x08\
    \x01\x12\x03\x08\05\n\x08\n\x01\x08\x12\x03\t\0\"\n\t\n\x02\x08$\x12\x03\
    \t\0\"\n\n\n\x02\x04\0\x12\x04\x0c\0\x11\x01\n\n\n\x03\x04\0\x01\x12\x03\
    \x0c\x08\x11\nS\n\x04\x04\0\x02\0\x12\x03\x0e\x02\x18\x1aF\x20These\x20a\
    re\x20the\x20list\x20of\x20low-level\x20scopes\x20to\x20check\x20from\
    \x20the\x20enum\x20below.\n\n\x0c\n\x05\x04\0\x02\0\x04\x12\x03\x0e\x02\
    \n\n\x0c\n\x05\x04\0\x02\0\x06\x12\x03\x0e\x0b\x0c\n\x0c\n\x05\x04\0\x02\
    \0\x01\x12\x03\x0e\r\x13\n\x0c\n\x05\x04\0\x02\0\x03\x12\x03\x0e\x16\x17\
    \nE\n\x04\x04\0\x02\x01\x12\x03\x10\x02\x20\x1a8\x20This\x20is\x20a\x20l\
    ist\x20of\x20fully\x20qualified\x20grpc\x20names\x20to\x20check.\n\n\x0c\
    \n\x05\x04\0\x02\x01\x04\x12\x03\x10\x02\n\n\x0c\n\x05\x04\0\x02\x01\x05\
    \x12\x03\x10\x0b\x11\n\x0c\n\x05\x04\0\x02\x01\x01\x12\x03\x10\x12\x1b\n\
    \x0c\n\x05\x04\0\x02\x01\x03\x12\x03\x10\x1e\x1f\n\xba\x05\n\x02\x05\0\
    \x12\x05#\0\xd2\x02\x01\x1a\xac\x05\x20Next\x20index:\x2041\n\x20NOTE:\
    \x20When\x20updating\x20the\x20list\x20of\x20\"clarifai_exposed\"\x20sco\
    pes,\x20please\x20also\n\x20update\x20the\x20TestScopes\x20function\x20i\
    n\x20main_key_test.go\x20and\x20TestGetExposedScopes\x20function\x20in\n\
    \x20scope_test.go\n\n\x20The\x20dependencies\x20listed\x20for\x20each\
    \x20scope\x20are\x20simply\x20recommendations\x20so\x20that\x20a\x20user\
    \n\x20cannot\x20make\x20a\x20key\x20that\x20would\x20be\x20useless.\x20B\
    eyond\x20the\x20key\x20creation\x20they\x20are\x20not\x20enforced\n\x20b\
    ut\x20rather\x20the\x20scopes\x20are\x20enforce\x20when\x20data\x20is\
    \x20accessed.\n\n\x20There\x20is\x20the\x20following\x20conventions\x20i\
    n\x20place,\x20make\x20sure\x20you\x20add\x20them\x20to\x20the\x20scopes\
    \x20for\x20all\x20new\n\x20resource\x20types:\n\n\x201.\x20*_Add\x20requ\
    ires\x20the\x20corresponding\x20_Get.\n\x202.\x20*_Delete\x20requires\
    \x20the\x20corresponding\x20_Add\x20and\x20_Get.\n\x203.\x20*_Patch\x20i\
    s\x20deprecated\x20and\x20not\x20check\x20anywhere.\n\n\n\n\n\x03\x05\0\
    \x01\x12\x03#\x05\x06\n\n\n\x03\x05\0\t\x12\x03$\x02\x1e\n\x0b\n\x04\x05\
    \0\t\0\x12\x03$\x0b\r\n\x0c\n\x05\x05\0\t\0\x01\x12\x03$\x0b\r\n\x0c\n\
    \x05\x05\0\t\0\x02\x12\x03$\x0b\r\n\x0b\n\x04\x05\0\t\x01\x12\x03$\x0f\
    \x11\n\x0c\n\x05\x05\0\t\x01\x01\x12\x03$\x0f\x11\n\x0c\n\x05\x05\0\t\
    \x01\x02\x12\x03$\x0f\x11\n\x0b\n\x04\x05\0\t\x02\x12\x03$\x13\x15\n\x0c\
    \n\x05\x05\0\t\x02\x01\x12\x03$\x13\x15\n\x0c\n\x05\x05\0\t\x02\x02\x12\
    \x03$\x13\x15\n\x0b\n\x04\x05\0\t\x03\x12\x03$\x17\x19\n\x0c\n\x05\x05\0\
    \t\x03\x01\x12\x03$\x17\x19\n\x0c\n\x05\x05\0\t\x03\x02\x12\x03$\x17\x19\
    \n\x0b\n\x04\x05\0\t\x04\x12\x03$\x1b\x1d\n\x0c\n\x05\x05\0\t\x04\x01\
    \x12\x03$\x1b\x1d\n\x0c\n\x05\x05\0\t\x04\x02\x12\x03$\x1b\x1d\n\xcb\x01\
    \n\x04\x05\0\x02\0\x12\x03(\x02\x0c\x1a\xbd\x01\x20introduce\x20undef\
    \x20so\x20that\x20the\x20zero\x20(default/unset)\x20value\x20of\x20the\
    \x20enum\x20is\x20not\x20a\x20real\n\x20permission.\x20\x20undef\x20is\
    \x20only\x20present\x20for\x20this\x20purpose\x20and\x20should\x20not\
    \x20be\x20used\n\x20to\x20indicate\x20any\x20\"real\"\x20value.\n\n\x0c\
    \n\x05\x05\0\x02\0\x01\x12\x03(\x02\x07\n\x0c\n\x05\x05\0\x02\0\x02\x12\
    \x03(\n\x0b\n\x0b\n\x04\x05\0\x02\x01\x12\x03*\x02%\n\x0c\n\x05\x05\0\
    \x02\x01\x01\x12\x03*\x02\x05\n\x0c\n\x05\x05\0\x02\x01\x02\x12\x03*\x08\
    \t\n\x0c\n\x05\x05\0\x02\x01\x03\x12\x03*\n$\n\x0f\n\x08\x05\0\x02\x01\
    \x03\xbe\xf3\x04\x12\x03*\x0b#\n6\n\x04\x05\0\x02\x02\x12\x03-\x02)\x1a)\
    \x20Make\x20an\x20rpc\x20to\x20our\x20prediction\x20services.\n\n\x0c\n\
    \x05\x05\0\x02\x02\x01\x12\x03-\x02\t\n\x0c\n\x05\x05\0\x02\x02\x02\x12\
    \x03-\x0c\r\n\x0c\n\x05\x05\0\x02\x02\x03\x12\x03-\x0e(\n\x0f\n\x08\x05\
    \0\x02\x02\x03\xbe\xf3\x04\x12\x03-\x0f'\n4\n\x04\x05\0\x02\x03\x12\x040\
    \x021<\x1a&\x20Write\x20to\x20the\x20inputs\x20table\x20in\x20the\x20DB.\
    \n\n\x0c\n\x05\x05\0\x02\x03\x01\x12\x030\x02\x0c\n\x0c\n\x05\x05\0\x02\
    \x03\x02\x12\x030\x0f\x10\n\r\n\x05\x05\0\x02\x03\x03\x12\x040\x111;\n\
    \x0f\n\x08\x05\0\x02\x03\x03\xbe\xf3\x04\x12\x030\x12*\n\x10\n\t\x05\0\
    \x02\x03\x03\xbf\xf3\x04\0\x12\x031\x12:\n4\n\x04\x05\0\x02\x04\x12\x033\
    \x02,\x1a'\x20Read\x20from\x20the\x20inputs\x20table\x20in\x20the\x20DB.\
    \n\n\x0c\n\x05\x05\0\x02\x04\x01\x12\x033\x02\x0c\n\x0c\n\x05\x05\0\x02\
    \x04\x02\x12\x033\x0f\x10\n\x0c\n\x05\x05\0\x02\x04\x03\x12\x033\x11+\n\
    \x0f\n\x08\x05\0\x02\x04\x03\xbe\xf3\x04\x12\x033\x12*\nY\n\x04\x05\0\
    \x02\x05\x12\x047\x02:'\x1aK\x20To\x20patch\x20we\x20need\x20read/write.\
    \n\x20Deprecated.\n\x20Optionally\x20needs\x20Concepts_Add.\n\n\x0c\n\
    \x05\x05\0\x02\x05\x01\x12\x037\x02\x0e\n\x0c\n\x05\x05\0\x02\x05\x02\
    \x12\x037\x11\x12\n\r\n\x05\x05\0\x02\x05\x03\x12\x047\x13:&\n\x0f\n\x08\
    \x05\0\x02\x05\x03\xbe\xf3\x04\x12\x037\x14,\n\x10\n\t\x05\0\x02\x05\x03\
    \xbf\xf3\x04\0\x12\x038\x14<\n\x10\n\t\x05\0\x02\x05\x03\xbf\xf3\x04\x01\
    \x12\x039\x14<\n\r\n\x06\x05\0\x02\x05\x03\x01\x12\x03:\x14%\n,\n\x04\
    \x05\0\x02\x06\x12\x04=\x02??\x1a\x1e\x20To\x20delete\x20we\x20need\x20r\
    ead/write\n\n\x0c\n\x05\x05\0\x02\x06\x01\x12\x03=\x02\x0f\n\x0c\n\x05\
    \x05\0\x02\x06\x02\x12\x03=\x12\x13\n\r\n\x05\x05\0\x02\x06\x03\x12\x04=\
    \x14?>\n\x0f\n\x08\x05\0\x02\x06\x03\xbe\xf3\x04\x12\x03=\x15-\n\x10\n\t\
    \x05\0\x02\x06\x03\xbf\xf3\x04\0\x12\x03>\x15=\n\x10\n\t\x05\0\x02\x06\
    \x03\xbf\xf3\x04\x01\x12\x03?\x15=\n\x1b\n\x04\x05\0\x02\x07\x12\x04A\
    \x02C(\x1a\r\x20Deprecated.\n\n\x0c\n\x05\x05\0\x02\x07\x01\x12\x03A\x02\
    \x0f\n\x0c\n\x05\x05\0\x02\x07\x02\x12\x03A\x12\x13\n\r\n\x05\x05\0\x02\
    \x07\x03\x12\x04A\x14C'\n\x10\n\t\x05\0\x02\x07\x03\xbf\xf3\x04\0\x12\
    \x03A\x15=\n\x10\n\t\x05\0\x02\x07\x03\xbf\xf3\x04\x01\x12\x03B\x15:\n\r\
    \n\x06\x05\0\x02\x07\x03\x01\x12\x03C\x15&\n0\n\x04\x05\0\x02\x08\x12\
    \x04F\x02G@\x1a\"\x20Write\x20to\x20the\x20concepts\x20DB\x20tables.\n\n\
    \x0c\n\x05\x05\0\x02\x08\x01\x12\x03F\x02\x0e\n\x0c\n\x05\x05\0\x02\x08\
    \x02\x12\x03F\x11\x13\n\r\n\x05\x05\0\x02\x08\x03\x12\x04F\x14G?\n\x0f\n\
    \x08\x05\0\x02\x08\x03\xbe\xf3\x04\x12\x03F\x15-\n\x10\n\t\x05\0\x02\x08\
    \x03\xbf\xf3\x04\0\x12\x03G\x14>\n0\n\x04\x05\0\x02\t\x12\x03J\x02/\x1a#\
    \x20Read\x20from\x20the\x20concepts\x20DB\x20tables.\n\n\x0c\n\x05\x05\0\
    \x02\t\x01\x12\x03J\x02\x0e\n\x0c\n\x05\x05\0\x02\t\x02\x12\x03J\x11\x13\
    \n\x0c\n\x05\x05\0\x02\t\x03\x12\x03J\x14.\n\x0f\n\x08\x05\0\x02\t\x03\
    \xbe\xf3\x04\x12\x03J\x15-\n\\\n\x04\x05\0\x02\n\x12\x04P\x02S*\x1a*\x20\
    To\x20patch\x20we\x20need\x20read/write.\n\x20Deprecated\n2\"\x20TODO:\
    \x20No\x20concept\x20searches\x20scope.\n\n\x0c\n\x05\x05\0\x02\n\x01\
    \x12\x03P\x02\x10\n\x0c\n\x05\x05\0\x02\n\x02\x12\x03P\x13\x15\n\r\n\x05\
    \x05\0\x02\n\x03\x12\x04P\x16S)\n\x0f\n\x08\x05\0\x02\n\x03\xbe\xf3\x04\
    \x12\x03P\x17/\n\x10\n\t\x05\0\x02\n\x03\xbf\xf3\x04\0\x12\x03Q\x17A\n\
    \x10\n\t\x05\0\x02\n\x03\xbf\xf3\x04\x01\x12\x03R\x17A\n\r\n\x06\x05\0\
    \x02\n\x03\x01\x12\x03S\x17(\nE\n\x04\x05\0\x02\x0b\x12\x04W\x02XD\x1a7\
    \x20To\x20delete\x20we\x20need\x20read/write.\n\x20Note:\x20not\x20imple\
    mented.\n\n\x0c\n\x05\x05\0\x02\x0b\x01\x12\x03W\x02\x11\n\x0c\n\x05\x05\
    \0\x02\x0b\x02\x12\x03W\x14\x16\n\r\n\x05\x05\0\x02\x0b\x03\x12\x04W\x17\
    XC\n\x10\n\t\x05\0\x02\x0b\x03\xbf\xf3\x04\0\x12\x03W\x18B\n\x10\n\t\x05\
    \0\x02\x0b\x03\xbf\xf3\x04\x01\x12\x03X\x18B\n.\n\x04\x05\0\x02\x0c\x12\
    \x04[\x02\\=\x1a\x20\x20Write\x20to\x20the\x20models\x20DB\x20tables.\n\
    \n\x0c\n\x05\x05\0\x02\x0c\x01\x12\x03[\x02\x0c\n\x0c\n\x05\x05\0\x02\
    \x0c\x02\x12\x03[\x0f\x11\n\r\n\x05\x05\0\x02\x0c\x03\x12\x04[\x12\\<\n\
    \x0f\n\x08\x05\0\x02\x0c\x03\xbe\xf3\x04\x12\x03[\x13+\n\x10\n\t\x05\0\
    \x02\x0c\x03\xbf\xf3\x04\0\x12\x03\\\x13;\nB\n\x04\x05\0\x02\r\x12\x03_\
    \x02-\x1a5\x20Read\x20from\x20the\x20models\x20and\x20models\x20versions\
    \x20DB\x20tables.\n\n\x0c\n\x05\x05\0\x02\r\x01\x12\x03_\x02\x0c\n\x0c\n\
    \x05\x05\0\x02\r\x02\x12\x03_\x0f\x11\n\x0c\n\x05\x05\0\x02\r\x03\x12\
    \x03_\x12,\n\x0f\n\x08\x05\0\x02\r\x03\xbe\xf3\x04\x12\x03_\x13+\n9\n\
    \x04\x05\0\x02\x0e\x12\x04c\x02g(\x1a+\x20To\x20patch\x20we\x20need\x20r\
    ead/write.\n\x20Deprecated.\n\n\x0c\n\x05\x05\0\x02\x0e\x01\x12\x03c\x02\
    \x0e\n\x0c\n\x05\x05\0\x02\x0e\x02\x12\x03c\x11\x13\n\r\n\x05\x05\0\x02\
    \x0e\x03\x12\x04c\x14g'\n\x0f\n\x08\x05\0\x02\x0e\x03\xbe\xf3\x04\x12\
    \x03c\x15-\n\x10\n\t\x05\0\x02\x0e\x03\xbf\xf3\x04\0\x12\x03d\x15=\n\x10\
    \n\t\x05\0\x02\x0e\x03\xbf\xf3\x04\x01\x12\x03e\x15=\n\x10\n\t\x05\0\x02\
    \x0e\x03\xbf\xf3\x04\x02\x12\x03f\x15?\n\r\n\x06\x05\0\x02\x0e\x03\x01\
    \x12\x03g\x15&\n-\n\x04\x05\0\x02\x0f\x12\x04j\x02l@\x1a\x1f\x20To\x20de\
    lete\x20we\x20need\x20read/write.\n\n\x0c\n\x05\x05\0\x02\x0f\x01\x12\
    \x03j\x02\x0f\n\x0c\n\x05\x05\0\x02\x0f\x02\x12\x03j\x12\x14\n\r\n\x05\
    \x05\0\x02\x0f\x03\x12\x04j\x15l?\n\x0f\n\x08\x05\0\x02\x0f\x03\xbe\xf3\
    \x04\x12\x03j\x16.\n\x10\n\t\x05\0\x02\x0f\x03\xbf\xf3\x04\0\x12\x03k\
    \x16>\n\x10\n\t\x05\0\x02\x0f\x03\xbf\xf3\x04\x01\x12\x03l\x16>\n\xc3\
    \x01\n\x04\x05\0\x02\x10\x12\x04q\x02r?\x1a\xb4\x01\x20Note:\x20Models_T\
    rain\x20is\x20effectively\x20doing\x20POST\x20/models/{models_id}/versio\
    ns\x20so\x20it's\x20treated\x20that\n\x20way\x20in\x20terms\x20of\x20dat\
    a\x20access\x20under\x20the\x20hood.\n\x20Write\x20to\x20the\x20model\
    \x20versions\x20DB\x20table.\n\n\x0c\n\x05\x05\0\x02\x10\x01\x12\x03q\
    \x02\x0e\n\x0c\n\x05\x05\0\x02\x10\x02\x12\x03q\x11\x13\n\r\n\x05\x05\0\
    \x02\x10\x03\x12\x04q\x14r>\n\x0f\n\x08\x05\0\x02\x10\x03\xbe\xf3\x04\
    \x12\x03q\x15-\n\x10\n\t\x05\0\x02\x10\x03\xbf\xf3\x04\0\x12\x03r\x15=\n\
    +\n\x04\x05\0\x02\x11\x12\x03u\x02>\x1a\x1e\x20Internal\x20only\x20model\
    \x20syncing.\n\n\x0c\n\x05\x05\0\x02\x11\x01\x12\x03u\x02\r\n\x0c\n\x05\
    \x05\0\x02\x11\x02\x12\x03u\x10\x12\n\x0c\n\x05\x05\0\x02\x11\x03\x12\
    \x03u\x13=\n\x10\n\t\x05\0\x02\x11\x03\xbf\xf3\x04\0\x12\x03u\x14<\nU\n\
    \x04\x05\0\x02\x12\x12\x04z\x02{C\x1a\"\x20Write\x20to\x20the\x20workflo\
    ws\x20DB\x20table.\n2#\x20TODO:\x20No\x20model\x20get\x20metrics\x20scop\
    e.\n\n\x0c\n\x05\x05\0\x02\x12\x01\x12\x03z\x02\x0f\n\x0c\n\x05\x05\0\
    \x02\x12\x02\x12\x03z\x12\x14\n\r\n\x05\x05\0\x02\x12\x03\x12\x04z\x15{B\
    \n\x0f\n\x08\x05\0\x02\x12\x03\xbe\xf3\x04\x12\x03z\x16.\n\x10\n\t\x05\0\
    \x02\x12\x03\xbf\xf3\x04\0\x12\x03{\x16A\n0\n\x04\x05\0\x02\x13\x12\x03~\
    \x020\x1a#\x20Read\x20from\x20the\x20workflows\x20DB\x20table.\n\n\x0c\n\
    \x05\x05\0\x02\x13\x01\x12\x03~\x02\x0f\n\x0c\n\x05\x05\0\x02\x13\x02\
    \x12\x03~\x12\x14\n\x0c\n\x05\x05\0\x02\x13\x03\x12\x03~\x15/\n\x0f\n\
    \x08\x05\0\x02\x13\x03\xbe\xf3\x04\x12\x03~\x16.\n;\n\x04\x05\0\x02\x14\
    \x12\x06\x82\x01\x02\x85\x01+\x1a+\x20To\x20patch\x20we\x20need\x20read/\
    write.\n\x20Deprecated.\n\n\r\n\x05\x05\0\x02\x14\x01\x12\x04\x82\x01\
    \x02\x11\n\r\n\x05\x05\0\x02\x14\x02\x12\x04\x82\x01\x14\x16\n\x0f\n\x05\
    \x05\0\x02\x14\x03\x12\x06\x82\x01\x17\x85\x01*\n\x10\n\x08\x05\0\x02\
    \x14\x03\xbe\xf3\x04\x12\x04\x82\x01\x180\n\x11\n\t\x05\0\x02\x14\x03\
    \xbf\xf3\x04\0\x12\x04\x83\x01\x18C\n\x11\n\t\x05\0\x02\x14\x03\xbf\xf3\
    \x04\x01\x12\x04\x84\x01\x18C\n\x0e\n\x06\x05\0\x02\x14\x03\x01\x12\x04\
    \x85\x01\x18)\n/\n\x04\x05\0\x02\x15\x12\x06\x88\x01\x02\x8a\x01F\x1a\
    \x1f\x20To\x20delete\x20we\x20need\x20read/write.\n\n\r\n\x05\x05\0\x02\
    \x15\x01\x12\x04\x88\x01\x02\x12\n\r\n\x05\x05\0\x02\x15\x02\x12\x04\x88\
    \x01\x15\x17\n\x0f\n\x05\x05\0\x02\x15\x03\x12\x06\x88\x01\x18\x8a\x01E\
    \n\x10\n\x08\x05\0\x02\x15\x03\xbe\xf3\x04\x12\x04\x88\x01\x191\n\x11\n\
    \t\x05\0\x02\x15\x03\xbf\xf3\x04\0\x12\x04\x89\x01\x19D\n\x11\n\t\x05\0\
    \x02\x15\x03\xbf\xf3\x04\x01\x12\x04\x8a\x01\x19D\n\x0c\n\x04\x05\0\x02\
    \x16\x12\x04\x8c\x01\x026\n\r\n\x05\x05\0\x02\x16\x01\x12\x04\x8c\x01\
    \x02\x15\n\r\n\x05\x05\0\x02\x16\x02\x12\x04\x8c\x01\x18\x1a\n\r\n\x05\
    \x05\0\x02\x16\x03\x12\x04\x8c\x01\x1b5\n\x10\n\x08\x05\0\x02\x16\x03\
    \xbe\xf3\x04\x12\x04\x8c\x01\x1c4\n\x0e\n\x04\x05\0\x02\x17\x12\x06\x8e\
    \x01\x02\x8f\x01N\n\r\n\x05\x05\0\x02\x17\x01\x12\x04\x8e\x01\x02\x15\n\
    \r\n\x05\x05\0\x02\x17\x02\x12\x04\x8e\x01\x18\x1a\n\x0f\n\x05\x05\0\x02\
    \x17\x03\x12\x06\x8e\x01\x1b\x8f\x01M\n\x10\n\x08\x05\0\x02\x17\x03\xbe\
    \xf3\x04\x12\x04\x8e\x01\x1c4\n\x11\n\t\x05\0\x02\x17\x03\xbf\xf3\x04\0\
    \x12\x04\x8f\x01\x1bL\n\x0e\n\x04\x05\0\x02\x18\x12\x06\x91\x01\x02\x93\
    \x01Q\n\r\n\x05\x05\0\x02\x18\x01\x12\x04\x91\x01\x02\x18\n\r\n\x05\x05\
    \0\x02\x18\x02\x12\x04\x91\x01\x1b\x1d\n\x0f\n\x05\x05\0\x02\x18\x03\x12\
    \x06\x91\x01\x1e\x93\x01P\n\x10\n\x08\x05\0\x02\x18\x03\xbe\xf3\x04\x12\
    \x04\x91\x01\x1f7\n\x11\n\t\x05\0\x02\x18\x03\xbf\xf3\x04\0\x12\x04\x92\
    \x01\x1eO\n\x11\n\t\x05\0\x02\x18\x03\xbf\xf3\x04\x01\x12\x04\x93\x01\
    \x1eO\nC\n\x04\x05\0\x02\x19\x12\x06\x97\x01\x02\x98\x012\x1a3\x20Write\
    \x20to\x20the\x20visualizations\x20DB\x20table.\n\x20Deprecated\n\n\r\n\
    \x05\x05\0\x02\x19\x01\x12\x04\x97\x01\x02\x18\n\r\n\x05\x05\0\x02\x19\
    \x02\x12\x04\x97\x01\x1b\x1d\n\x0f\n\x05\x05\0\x02\x19\x03\x12\x06\x97\
    \x01\x1e\x98\x011\n\x11\n\t\x05\0\x02\x19\x03\xbf\xf3\x04\0\x12\x04\x97\
    \x01\x1fS\n\x0e\n\x06\x05\0\x02\x19\x03\x01\x12\x04\x98\x01\x1f0\nB\n\
    \x04\x05\0\x02\x1a\x12\x04\x9c\x01\x022\x1a4\x20Read\x20from\x20the\x20v\
    isualizations\x20DB\x20table.\n\x20Deprecated\n\n\r\n\x05\x05\0\x02\x1a\
    \x01\x12\x04\x9c\x01\x02\x18\n\r\n\x05\x05\0\x02\x1a\x02\x12\x04\x9c\x01\
    \x1b\x1d\n\r\n\x05\x05\0\x02\x1a\x03\x12\x04\x9c\x01\x1e1\n\x0e\n\x06\
    \x05\0\x02\x1a\x03\x01\x12\x04\x9c\x01\x1f0\n4\n\x04\x05\0\x02\x1b\x12\
    \x06\x9f\x01\x02\xa0\x01G\x1a$\x20Write\x20to\x20the\x20annotations\x20D\
    B\x20table.\n\n\r\n\x05\x05\0\x02\x1b\x01\x12\x04\x9f\x01\x02\x11\n\r\n\
    \x05\x05\0\x02\x1b\x02\x12\x04\x9f\x01\x14\x16\n\x0f\n\x05\x05\0\x02\x1b\
    \x03\x12\x06\x9f\x01\x17\xa0\x01F\n\x10\n\x08\x05\0\x02\x1b\x03\xbe\xf3\
    \x04\x12\x04\x9f\x01\x180\n\x11\n\t\x05\0\x02\x1b\x03\xbf\xf3\x04\0\x12\
    \x04\xa0\x01\x18E\n3\n\x04\x05\0\x02\x1c\x12\x04\xa3\x01\x022\x1a%\x20Re\
    ad\x20from\x20the\x20annotations\x20DB\x20table.\n\n\r\n\x05\x05\0\x02\
    \x1c\x01\x12\x04\xa3\x01\x02\x11\n\r\n\x05\x05\0\x02\x1c\x02\x12\x04\xa3\
    \x01\x14\x16\n\r\n\x05\x05\0\x02\x1c\x03\x12\x04\xa3\x01\x171\n\x10\n\
    \x08\x05\0\x02\x1c\x03\xbe\xf3\x04\x12\x04\xa3\x01\x180\n;\n\x04\x05\0\
    \x02\x1d\x12\x06\xa7\x01\x02\xaa\x01-\x1a+\x20To\x20patch\x20we\x20need\
    \x20read/write.\n\x20Deprecated.\n\n\r\n\x05\x05\0\x02\x1d\x01\x12\x04\
    \xa7\x01\x02\x13\n\r\n\x05\x05\0\x02\x1d\x02\x12\x04\xa7\x01\x16\x18\n\
    \x0f\n\x05\x05\0\x02\x1d\x03\x12\x06\xa7\x01\x19\xaa\x01,\n\x10\n\x08\
    \x05\0\x02\x1d\x03\xbe\xf3\x04\x12\x04\xa7\x01\x1a2\n\x11\n\t\x05\0\x02\
    \x1d\x03\xbf\xf3\x04\0\x12\x04\xa8\x01\x1aG\n\x11\n\t\x05\0\x02\x1d\x03\
    \xbf\xf3\x04\x01\x12\x04\xa9\x01\x1aG\n\x0e\n\x06\x05\0\x02\x1d\x03\x01\
    \x12\x04\xaa\x01\x1a+\n/\n\x04\x05\0\x02\x1e\x12\x06\xad\x01\x02\xaf\x01\
    J\x1a\x1f\x20To\x20delete\x20we\x20need\x20read/write.\n\n\r\n\x05\x05\0\
    \x02\x1e\x01\x12\x04\xad\x01\x02\x14\n\r\n\x05\x05\0\x02\x1e\x02\x12\x04\
    \xad\x01\x17\x19\n\x0f\n\x05\x05\0\x02\x1e\x03\x12\x06\xad\x01\x1a\xaf\
    \x01I\n\x10\n\x08\x05\0\x02\x1e\x03\xbe\xf3\x04\x12\x04\xad\x01\x1b3\n\
    \x11\n\t\x05\0\x02\x1e\x03\xbf\xf3\x04\0\x12\x04\xae\x01\x1bH\n\x11\n\t\
    \x05\0\x02\x1e\x03\xbf\xf3\x04\x01\x12\x04\xaf\x01\x1bH\n3\n\x04\x05\0\
    \x02\x1f\x12\x06\xb4\x01\x02\xb5\x01E\x1a#\x20Write\x20to\x20the\x20coll\
    ectors\x20DB\x20table.\n\n\r\n\x05\x05\0\x02\x1f\x01\x12\x04\xb4\x01\x02\
    \x10\n\r\n\x05\x05\0\x02\x1f\x02\x12\x04\xb4\x01\x13\x15\n\x0f\n\x05\x05\
    \0\x02\x1f\x03\x12\x06\xb4\x01\x16\xb5\x01D\n\x10\n\x08\x05\0\x02\x1f\
    \x03\xbe\xf3\x04\x12\x04\xb4\x01\x17/\n\x11\n\t\x05\0\x02\x1f\x03\xbf\
    \xf3\x04\0\x12\x04\xb5\x01\x17C\n2\n\x04\x05\0\x02\x20\x12\x04\xb8\x01\
    \x021\x1a$\x20Read\x20from\x20the\x20collectors\x20DB\x20table.\n\n\r\n\
    \x05\x05\0\x02\x20\x01\x12\x04\xb8\x01\x02\x10\n\r\n\x05\x05\0\x02\x20\
    \x02\x12\x04\xb8\x01\x13\x15\n\r\n\x05\x05\0\x02\x20\x03\x12\x04\xb8\x01\
    \x160\n\x10\n\x08\x05\0\x02\x20\x03\xbe\xf3\x04\x12\x04\xb8\x01\x17/\n/\
    \n\x04\x05\0\x02!\x12\x06\xbb\x01\x02\xbd\x01H\x1a\x1f\x20To\x20delete\
    \x20we\x20need\x20read/write.\n\n\r\n\x05\x05\0\x02!\x01\x12\x04\xbb\x01\
    \x02\x13\n\r\n\x05\x05\0\x02!\x02\x12\x04\xbb\x01\x16\x18\n\x0f\n\x05\
    \x05\0\x02!\x03\x12\x06\xbb\x01\x19\xbd\x01G\n\x10\n\x08\x05\0\x02!\x03\
    \xbe\xf3\x04\x12\x04\xbb\x01\x1a2\n\x11\n\t\x05\0\x02!\x03\xbf\xf3\x04\0\
    \x12\x04\xbc\x01\x1aF\n\x11\n\t\x05\0\x02!\x03\xbf\xf3\x04\x01\x12\x04\
    \xbd\x01\x1aF\n-\n\x04\x05\0\x02\"\x12\x06\xc1\x01\x02\xc2\x019\x1a\x1d\
    \x20Write\x20to\x20the\x20apps\x20DB\x20table.\n\n\r\n\x05\x05\0\x02\"\
    \x01\x12\x04\xc1\x01\x02\n\n\r\n\x05\x05\0\x02\"\x02\x12\x04\xc1\x01\r\
    \x0f\n\x0f\n\x05\x05\0\x02\"\x03\x12\x06\xc1\x01\x10\xc2\x018\n\x10\n\
    \x08\x05\0\x02\"\x03\xbe\xf3\x04\x12\x04\xc1\x01\x11)\n\x11\n\t\x05\0\
    \x02\"\x03\xbf\xf3\x04\0\x12\x04\xc2\x01\x117\n,\n\x04\x05\0\x02#\x12\
    \x04\xc5\x01\x02+\x1a\x1e\x20Read\x20from\x20the\x20apps\x20DB\x20table.\
    \n\n\r\n\x05\x05\0\x02#\x01\x12\x04\xc5\x01\x02\n\n\r\n\x05\x05\0\x02#\
    \x02\x12\x04\xc5\x01\r\x0f\n\r\n\x05\x05\0\x02#\x03\x12\x04\xc5\x01\x10*\
    \n\x10\n\x08\x05\0\x02#\x03\xbe\xf3\x04\x12\x04\xc5\x01\x11)\n/\n\x04\
    \x05\0\x02$\x12\x06\xc8\x01\x02\xca\x01<\x1a\x1f\x20To\x20delete\x20we\
    \x20need\x20read/write.\n\n\r\n\x05\x05\0\x02$\x01\x12\x04\xc8\x01\x02\r\
    \n\r\n\x05\x05\0\x02$\x02\x12\x04\xc8\x01\x10\x12\n\x0f\n\x05\x05\0\x02$\
    \x03\x12\x06\xc8\x01\x13\xca\x01;\n\x10\n\x08\x05\0\x02$\x03\xbe\xf3\x04\
    \x12\x04\xc8\x01\x14,\n\x11\n\t\x05\0\x02$\x03\xbf\xf3\x04\0\x12\x04\xc9\
    \x01\x14:\n\x11\n\t\x05\0\x02$\x03\xbf\xf3\x04\x01\x12\x04\xca\x01\x14:\
    \n-\n\x04\x05\0\x02%\x12\x06\xcd\x01\x02\xce\x019\x1a\x1d\x20Write\x20to\
    \x20the\x20keys\x20DB\x20table.\n\n\r\n\x05\x05\0\x02%\x01\x12\x04\xcd\
    \x01\x02\n\n\r\n\x05\x05\0\x02%\x02\x12\x04\xcd\x01\r\x0f\n\x0f\n\x05\
    \x05\0\x02%\x03\x12\x06\xcd\x01\x10\xce\x018\n\x10\n\x08\x05\0\x02%\x03\
    \xbe\xf3\x04\x12\x04\xcd\x01\x11)\n\x11\n\t\x05\0\x02%\x03\xbf\xf3\x04\0\
    \x12\x04\xce\x01\x117\n,\n\x04\x05\0\x02&\x12\x04\xd1\x01\x02+\x1a\x1e\
    \x20Read\x20from\x20the\x20keys\x20DB\x20table.\n\n\r\n\x05\x05\0\x02&\
    \x01\x12\x04\xd1\x01\x02\n\n\r\n\x05\x05\0\x02&\x02\x12\x04\xd1\x01\r\
    \x0f\n\r\n\x05\x05\0\x02&\x03\x12\x04\xd1\x01\x10*\n\x10\n\x08\x05\0\x02\
    &\x03\xbe\xf3\x04\x12\x04\xd1\x01\x11)\n/\n\x04\x05\0\x02'\x12\x06\xd4\
    \x01\x02\xd6\x01<\x1a\x1f\x20To\x20delete\x20we\x20need\x20read/write.\n\
    \n\r\n\x05\x05\0\x02'\x01\x12\x04\xd4\x01\x02\r\n\r\n\x05\x05\0\x02'\x02\
    \x12\x04\xd4\x01\x10\x12\n\x0f\n\x05\x05\0\x02'\x03\x12\x06\xd4\x01\x13\
    \xd6\x01;\n\x10\n\x08\x05\0\x02'\x03\xbe\xf3\x04\x12\x04\xd4\x01\x14,\n\
    \x11\n\t\x05\0\x02'\x03\xbf\xf3\x04\0\x12\x04\xd5\x01\x14:\n\x11\n\t\x05\
    \0\x02'\x03\xbf\xf3\x04\x01\x12\x04\xd6\x01\x14:\n3\n\x04\x05\0\x02(\x12\
    \x06\xd9\x01\x02\xda\x01K\x1a#\x20Write\x20to\x20the\x20app\x20sharing\
    \x20DB\x20table\n\n\r\n\x05\x05\0\x02(\x01\x12\x04\xd9\x01\x02\x13\n\r\n\
    \x05\x05\0\x02(\x02\x12\x04\xd9\x01\x16\x18\n\x0f\n\x05\x05\0\x02(\x03\
    \x12\x06\xd9\x01\x19\xda\x01J\n\x10\n\x08\x05\0\x02(\x03\xbe\xf3\x04\x12\
    \x04\xd9\x01\x1a2\n\x11\n\t\x05\0\x02(\x03\xbf\xf3\x04\0\x12\x04\xda\x01\
    \x1aI\n2\n\x04\x05\0\x02)\x12\x04\xdd\x01\x024\x1a$\x20Read\x20from\x20t\
    he\x20app\x20sharing\x20DB\x20table\n\n\r\n\x05\x05\0\x02)\x01\x12\x04\
    \xdd\x01\x02\x13\n\r\n\x05\x05\0\x02)\x02\x12\x04\xdd\x01\x16\x18\n\r\n\
    \x05\x05\0\x02)\x03\x12\x04\xdd\x01\x193\n\x10\n\x08\x05\0\x02)\x03\xbe\
    \xf3\x04\x12\x04\xdd\x01\x1a2\n.\n\x04\x05\0\x02*\x12\x06\xe0\x01\x02\
    \xe2\x01N\x1a\x1e\x20To\x20delete\x20we\x20need\x20read/write\n\n\r\n\
    \x05\x05\0\x02*\x01\x12\x04\xe0\x01\x02\x16\n\r\n\x05\x05\0\x02*\x02\x12\
    \x04\xe0\x01\x19\x1b\n\x0f\n\x05\x05\0\x02*\x03\x12\x06\xe0\x01\x1c\xe2\
    \x01M\n\x10\n\x08\x05\0\x02*\x03\xbe\xf3\x04\x12\x04\xe0\x01\x1d5\n\x11\
    \n\t\x05\0\x02*\x03\xbf\xf3\x04\0\x12\x04\xe1\x01\x1dL\n\x11\n\t\x05\0\
    \x02*\x03\xbf\xf3\x04\x01\x12\x04\xe2\x01\x1dL\n,\n\x04\x05\0\x02+\x12\
    \x06\xe5\x01\x02\xe6\x01E\x1a\x1c\x20Write\x20to\x20the\x20metrics\x20ta\
    ble\n\n\r\n\x05\x05\0\x02+\x01\x12\x04\xe5\x01\x02\r\n\r\n\x05\x05\0\x02\
    +\x02\x12\x04\xe5\x01\x10\x12\n\x0f\n\x05\x05\0\x02+\x03\x12\x06\xe5\x01\
    \x13\xe6\x01D\n\x10\n\x08\x05\0\x02+\x03\xbe\xf3\x04\x12\x04\xe5\x01\x14\
    ,\n\x11\n\t\x05\0\x02+\x03\xbf\xf3\x04\0\x12\x04\xe6\x01\x1aC\n'\n\x04\
    \x05\0\x02,\x12\x04\xe9\x01\x02.\x1a\x19\x20Read\x20from\x20metrics\x20t\
    able\n\n\r\n\x05\x05\0\x02,\x01\x12\x04\xe9\x01\x02\r\n\r\n\x05\x05\0\
    \x02,\x02\x12\x04\xe9\x01\x10\x12\n\r\n\x05\x05\0\x02,\x03\x12\x04\xe9\
    \x01\x13-\n\x10\n\x08\x05\0\x02,\x03\xbe\xf3\x04\x12\x04\xe9\x01\x14,\n.\
    \n\x04\x05\0\x02-\x12\x06\xec\x01\x02\xee\x01H\x1a\x1e\x20To\x20delete\
    \x20we\x20need\x20read/write\n\n\r\n\x05\x05\0\x02-\x01\x12\x04\xec\x01\
    \x02\x10\n\r\n\x05\x05\0\x02-\x02\x12\x04\xec\x01\x13\x15\n\x0f\n\x05\
    \x05\0\x02-\x03\x12\x06\xec\x01\x16\xee\x01G\n\x10\n\x08\x05\0\x02-\x03\
    \xbe\xf3\x04\x12\x04\xec\x01\x17/\n\x11\n\t\x05\0\x02-\x03\xbf\xf3\x04\0\
    \x12\x04\xed\x01\x1dF\n\x11\n\t\x05\0\x02-\x03\xbf\xf3\x04\x01\x12\x04\
    \xee\x01\x1dF\n*\n\x04\x05\0\x02.\x12\x06\xf1\x01\x02\xf2\x01:\x1a\x1a\
    \x20Write\x20to\x20tasks\x20DB\x20table.\n\n\r\n\x05\x05\0\x02.\x01\x12\
    \x04\xf1\x01\x02\x0b\n\r\n\x05\x05\0\x02.\x02\x12\x04\xf1\x01\x0e\x10\n\
    \x0f\n\x05\x05\0\x02.\x03\x12\x06\xf1\x01\x11\xf2\x019\n\x10\n\x08\x05\0\
    \x02.\x03\xbe\xf3\x04\x12\x04\xf1\x01\x12*\n\x11\n\t\x05\0\x02.\x03\xbf\
    \xf3\x04\0\x12\x04\xf2\x01\x118\n-\n\x04\x05\0\x02/\x12\x04\xf5\x01\x02,\
    \x1a\x1f\x20Read\x20from\x20the\x20tasks\x20DB\x20table.\n\n\r\n\x05\x05\
    \0\x02/\x01\x12\x04\xf5\x01\x02\x0b\n\r\n\x05\x05\0\x02/\x02\x12\x04\xf5\
    \x01\x0e\x10\n\r\n\x05\x05\0\x02/\x03\x12\x04\xf5\x01\x11+\n\x10\n\x08\
    \x05\0\x02/\x03\xbe\xf3\x04\x12\x04\xf5\x01\x12*\n.\n\x04\x05\0\x020\x12\
    \x06\xf8\x01\x02\xfa\x01=\x1a\x1e\x20To\x20delete\x20we\x20need\x20read/\
    write\n\n\r\n\x05\x05\0\x020\x01\x12\x04\xf8\x01\x02\x0e\n\r\n\x05\x05\0\
    \x020\x02\x12\x04\xf8\x01\x11\x13\n\x0f\n\x05\x05\0\x020\x03\x12\x06\xf8\
    \x01\x14\xfa\x01<\n\x10\n\x08\x05\0\x020\x03\xbe\xf3\x04\x12\x04\xf8\x01\
    \x15-\n\x11\n\t\x05\0\x020\x03\xbf\xf3\x04\0\x12\x04\xf9\x01\x14;\n\x11\
    \n\t\x05\0\x020\x03\xbf\xf3\x04\x01\x12\x04\xfa\x01\x14;\n9\n\x04\x05\0\
    \x021\x12\x06\xfd\x01\x02\xfe\x018\x1a)\x20Write\x20to\x20the\x20passwor\
    d_policies\x20DB\x20table\n\n\r\n\x05\x05\0\x021\x01\x12\x04\xfd\x01\x02\
    \x16\n\r\n\x05\x05\0\x021\x02\x12\x04\xfd\x01\x19\x1b\n\x0f\n\x05\x05\0\
    \x021\x03\x12\x06\xfd\x01\x1c\xfe\x017\n\x10\n\x08\x05\0\x021\x03\xbe\
    \xf3\x04\x12\x04\xfd\x01\x1d5\n\x11\n\t\x05\0\x021\x03\xbf\xf3\x04\0\x12\
    \x04\xfe\x01\x046\n8\n\x04\x05\0\x022\x12\x04\x81\x02\x027\x1a*\x20Read\
    \x20from\x20the\x20password_policies\x20DB\x20table\n\n\r\n\x05\x05\0\
    \x022\x01\x12\x04\x81\x02\x02\x16\n\r\n\x05\x05\0\x022\x02\x12\x04\x81\
    \x02\x19\x1b\n\r\n\x05\x05\0\x022\x03\x12\x04\x81\x02\x1c6\n\x10\n\x08\
    \x05\0\x022\x03\xbe\xf3\x04\x12\x04\x81\x02\x1d5\n@\n\x04\x05\0\x023\x12\
    \x06\x84\x02\x02\x86\x02;\x1a0\x20To\x20delete\x20password_policies\x20w\
    e\x20need\x20read/write\n\n\r\n\x05\x05\0\x023\x01\x12\x04\x84\x02\x02\
    \x19\n\r\n\x05\x05\0\x023\x02\x12\x04\x84\x02\x1c\x1e\n\x0f\n\x05\x05\0\
    \x023\x03\x12\x06\x84\x02\x1f\x86\x02:\n\x10\n\x08\x05\0\x023\x03\xbe\
    \xf3\x04\x12\x04\x84\x02\x208\n\x11\n\t\x05\0\x023\x03\xbf\xf3\x04\0\x12\
    \x04\x85\x02\x079\n\x11\n\t\x05\0\x023\x03\xbf\xf3\x04\x01\x12\x04\x86\
    \x02\x079\n,\n\x04\x05\0\x024\x12\x04\x8f\x02\x022\x1a\x1e\x20Read\x20fr\
    om\x20label\x20orders\x20table\n\n\r\n\x05\x05\0\x024\x01\x12\x04\x8f\
    \x02\x02\x11\n\r\n\x05\x05\0\x024\x02\x12\x04\x8f\x02\x14\x16\n\r\n\x05\
    \x05\0\x024\x03\x12\x04\x8f\x02\x171\n\x10\n\x08\x05\0\x024\x03\xbe\xf3\
    \x04\x12\x04\x8f\x02\x180\n-\n\x04\x05\0\x025\x12\x06\x92\x02\x02\x93\
    \x02H\x1a\x1d\x20Write\x20to\x20label\x20orders\x20table\n\n\r\n\x05\x05\
    \0\x025\x01\x12\x04\x92\x02\x02\x11\n\r\n\x05\x05\0\x025\x02\x12\x04\x92\
    \x02\x14\x16\n\x0f\n\x05\x05\0\x025\x03\x12\x06\x92\x02\x17\x93\x02G\n\
    \x10\n\x08\x05\0\x025\x03\xbe\xf3\x04\x12\x04\x92\x02\x180\n\x11\n\t\x05\
    \0\x025\x03\xbf\xf3\x04\0\x12\x04\x93\x02\x19F\n;\n\x04\x05\0\x026\x12\
    \x06\x96\x02\x02\x98\x02K\x1a+\x20To\x20delete\x20label\x20orders\x20we\
    \x20need\x20read/write\n\n\r\n\x05\x05\0\x026\x01\x12\x04\x96\x02\x02\
    \x14\n\r\n\x05\x05\0\x026\x02\x12\x04\x96\x02\x17\x19\n\x0f\n\x05\x05\0\
    \x026\x03\x12\x06\x96\x02\x1a\x98\x02J\n\x10\n\x08\x05\0\x026\x03\xbe\
    \xf3\x04\x12\x04\x96\x02\x1b3\n\x11\n\t\x05\0\x026\x03\xbf\xf3\x04\0\x12\
    \x04\x97\x02\x1cI\n\x11\n\t\x05\0\x026\x03\xbf\xf3\x04\x01\x12\x04\x98\
    \x02\x1cI\n4\n\x04\x05\0\x027\x12\x04\x9b\x02\x029\x1a&\x20Read\x20from\
    \x20user_feature_configs\x20table\n\n\r\n\x05\x05\0\x027\x01\x12\x04\x9b\
    \x02\x02\x18\n\r\n\x05\x05\0\x027\x02\x12\x04\x9b\x02\x1b\x1d\n\r\n\x05\
    \x05\0\x027\x03\x12\x04\x9b\x02\x1e8\n\x10\n\x08\x05\0\x027\x03\xbe\xf3\
    \x04\x12\x04\x9b\x02\x1f7\n<\n\x04\x05\0\x028\x12\x06\xb4\x02\x02\xb5\
    \x02B\x1a,\x20CRUD\x20on\x20FindDuplicateAnnotationsJobs\x20table\n\n\r\
    \n\x05\x05\0\x028\x01\x12\x04\xb4\x02\x02\"\n\r\n\x05\x05\0\x028\x02\x12\
    \x04\xb4\x02%(\n\x0f\n\x05\x05\0\x028\x03\x12\x06\xb4\x02)\xb5\x02A\n\
    \x10\n\x08\x05\0\x028\x03\xbe\xf3\x04\x12\x04\xb4\x02*B\n\x11\n\t\x05\0\
    \x028\x03\xbf\xf3\x04\0\x12\x04\xb5\x02\x02@\n\x0c\n\x04\x05\0\x029\x12\
    \x04\xb6\x02\x02D\n\r\n\x05\x05\0\x029\x01\x12\x04\xb6\x02\x02\"\n\r\n\
    \x05\x05\0\x029\x02\x12\x04\xb6\x02%(\n\r\n\x05\x05\0\x029\x03\x12\x04\
    \xb6\x02)C\n\x10\n\x08\x05\0\x029\x03\xbe\xf3\x04\x12\x04\xb6\x02*B\n\
    \x0e\n\x04\x05\0\x02:\x12\x06\xb7\x02\x02\xb9\x02H\n\r\n\x05\x05\0\x02:\
    \x01\x12\x04\xb7\x02\x02%\n\r\n\x05\x05\0\x02:\x02\x12\x04\xb7\x02(+\n\
    \x0f\n\x05\x05\0\x02:\x03\x12\x06\xb7\x02,\xb9\x02G\n\x10\n\x08\x05\0\
    \x02:\x03\xbe\xf3\x04\x12\x04\xb7\x02-E\n\x11\n\t\x05\0\x02:\x03\xbf\xf3\
    \x04\0\x12\x04\xb8\x02\x08F\n\x11\n\t\x05\0\x02:\x03\xbf\xf3\x04\x01\x12\
    \x04\xb9\x02\x08F\n3\n\x04\x05\0\x02;\x12\x04\xc5\x02\x02(\x1a%\x20Make\
    \x20an\x20rpc\x20to\x20our\x20search\x20services.\n\n\r\n\x05\x05\0\x02;\
    \x01\x12\x04\xc5\x02\x02\x08\n\r\n\x05\x05\0\x02;\x02\x12\x04\xc5\x02\
    \x0b\x0c\n\r\n\x05\x05\0\x02;\x03\x12\x04\xc5\x02\r'\n\x10\n\x08\x05\0\
    \x02;\x03\xbe\xf3\x04\x12\x04\xc5\x02\x0e&\n&\n\x04\x05\0\x02<\x12\x04\
    \xc8\x02\x023\x1a\x18\x20To\x20get\x20a\x20saved\x20search.\n\n\r\n\x05\
    \x05\0\x02<\x01\x12\x04\xc8\x02\x02\x11\n\r\n\x05\x05\0\x02<\x02\x12\x04\
    \xc8\x02\x14\x17\n\r\n\x05\x05\0\x02<\x03\x12\x04\xc8\x02\x182\n\x10\n\
    \x08\x05\0\x02<\x03\xbe\xf3\x04\x12\x04\xc8\x02\x191\n'\n\x04\x05\0\x02=\
    \x12\x06\xcb\x02\x02\xcc\x023\x1a\x17\x20To\x20add\x20a\x20saved\x20sear\
    ch\n\n\r\n\x05\x05\0\x02=\x01\x12\x04\xcb\x02\x02\x11\n\r\n\x05\x05\0\
    \x02=\x02\x12\x04\xcb\x02\x14\x17\n\x0f\n\x05\x05\0\x02=\x03\x12\x06\xcb\
    \x02\x18\xcc\x022\n\x10\n\x08\x05\0\x02=\x03\xbe\xf3\x04\x12\x04\xcb\x02\
    \x191\n\x11\n\t\x05\0\x02=\x03\xbf\xf3\x04\0\x12\x04\xcc\x02\x041\n*\n\
    \x04\x05\0\x02>\x12\x06\xcf\x02\x02\xd1\x023\x1a\x1a\x20To\x20delete\x20\
    a\x20saved\x20search\n\n\r\n\x05\x05\0\x02>\x01\x12\x04\xcf\x02\x02\x14\
    \n\r\n\x05\x05\0\x02>\x02\x12\x04\xcf\x02\x15\x18\n\x0f\n\x05\x05\0\x02>\
    \x03\x12\x06\xcf\x02\x19\xd1\x022\n\x10\n\x08\x05\0\x02>\x03\xbe\xf3\x04\
    \x12\x04\xcf\x02\x1a2\n\x11\n\t\x05\0\x02>\x03\xbf\xf3\x04\0\x12\x04\xd0\
    \x02\x041\n\x11\n\t\x05\0\x02>\x03\xbf\xf3\x04\x01\x12\x04\xd1\x02\x041\
    \n\x0b\n\x01\x07\x12\x06\xd4\x02\0\xdb\x02\x01\n\x95\x01\n\x02\x07\0\x12\
    \x04\xd7\x02\x02\x1f\x1a\x88\x01\x20indicates\x20whether\x20the\x20given\
    \x20scope\x20should\x20be\x20returned\x20by\x20the\x20Get\x20/scopes/\
    \x20call\n\x20or\x20any\x20other\x20call\x20that\x20returns\x20list\x20o\
    f\x20available\x20perms.\n\n\x0b\n\x03\x07\0\x02\x12\x04\xd4\x02\x07'\n\
    \x0b\n\x03\x07\0\x05\x12\x04\xd7\x02\x02\x06\n\x0b\n\x03\x07\0\x01\x12\
    \x04\xd7\x02\x07\x16\n\x0b\n\x03\x07\0\x03\x12\x04\xd7\x02\x19\x1e\n\xaa\
    \x01\n\x02\x07\x01\x12\x04\xda\x02\x02/\x1a\x9d\x01\x20TODO:\x20We\x20ha\
    ve\x20no\x20way\x20of\x20picking\x20extension\x20field\x20numbers\x20wit\
    hin\x20clarifai\x20to\x20guarantee\n\x20uniqueness.\x20\x20Note:\x205000\
    0-99999\x20are\x20for\x20organizational\x20use\x20(like\x20this)\n\n\x0b\
    \n\x03\x07\x01\x02\x12\x04\xd4\x02\x07'\n\x0b\n\x03\x07\x01\x04\x12\x04\
    \xda\x02\x02\n\n\x0b\n\x03\x07\x01\x06\x12\x04\xda\x02\x0b\x0c\n\x0b\n\
    \x03\x07\x01\x01\x12\x04\xda\x02\r&\n\x0b\n\x03\x07\x01\x03\x12\x04\xda\
    \x02).b\x06proto3\
";

static file_descriptor_proto_lazy: ::protobuf::rt::LazyV2<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::LazyV2::INIT;

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    file_descriptor_proto_lazy.get(|| {
        parse_descriptor_proto()
    })
}
